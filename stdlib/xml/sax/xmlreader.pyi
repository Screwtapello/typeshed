from collections.abc import Mapping
from xml.sax.handler import ContentHandler, DTDHandler, EntityResolver, ErrorHandler

class XMLReader:
    def parse(self, source): ...
    def getContentHandler(self) -> ContentHandler: ...
    def setContentHandler(self, handler: ContentHandler) -> None: ...
    def getDTDHandler(self) -> DTDHandler: ...
    def setDTDHandler(self, handler: DTDHandler) -> None: ...
    def getEntityResolver(self) -> EntityResolver: ...
    def setEntityResolver(self, resolver: EntityResolver) -> None: ...
    def getErrorHandler(self) -> ErrorHandler: ...
    def setErrorHandler(self, handler: ErrorHandler) -> None: ...
    def setLocale(self, locale): ...
    def getFeature(self, name: str) -> object: ...
    def setFeature(self, name: str, state: object) -> None: ...
    def getProperty(self, name: str) -> object: ...
    def setProperty(self, name: str, value: object) -> None: ...

class IncrementalParser(XMLReader):
    def __init__(self, bufsize: int = 65536) -> None: ...
    def parse(self, source): ...
    def feed(self, data): ...
    def prepareParser(self, source): ...
    def close(self): ...
    def reset(self): ...

class Locator:
    def getColumnNumber(self): ...
    def getLineNumber(self): ...
    def getPublicId(self): ...
    def getSystemId(self): ...

class InputSource:
    def __init__(self, system_id: str | None = None) -> None: ...
    def setPublicId(self, public_id): ...
    def getPublicId(self): ...
    def setSystemId(self, system_id): ...
    def getSystemId(self): ...
    def setEncoding(self, encoding): ...
    def getEncoding(self): ...
    def setByteStream(self, bytefile): ...
    def getByteStream(self): ...
    def setCharacterStream(self, charfile): ...
    def getCharacterStream(self): ...

class AttributesImpl:
    def __init__(self, attrs: Mapping[str, str]) -> None: ...
    def getLength(self): ...
    def getType(self, name): ...
    def getValue(self, name): ...
    def getValueByQName(self, name): ...
    def getNameByQName(self, name): ...
    def getQNameByName(self, name): ...
    def getNames(self): ...
    def getQNames(self): ...
    def __len__(self) -> int: ...
    def __getitem__(self, name): ...
    def keys(self): ...
    def __contains__(self, name): ...
    def get(self, name, alternative=None): ...
    def copy(self): ...
    def items(self): ...
    def values(self): ...

class AttributesNSImpl(AttributesImpl):
    def __init__(self, attrs: Mapping[tuple[str, str], str], qnames: Mapping[tuple[str, str], str]) -> None: ...
    def getValueByQName(self, name): ...
    def getNameByQName(self, name): ...
    def getQNameByName(self, name): ...
    def getQNames(self): ...
    def copy(self): ...
